# SPDX-FileCopyrightText: 2022 Vector Informatik GmbH
#
# SPDX-License-Identifier: MIT

set(gitHashFile "${CMAKE_CURRENT_BINARY_DIR}/git_hash_file")
set(gitHeadFile "${CMAKE_CURRENT_BINARY_DIR}/git_head_file")

configure_file("@GIT_HEAD_FILE@" ${gitHeadFile} COPYONLY)

file(READ ${gitHeadFile} GIT_HEAD LIMIT 512)
string(REGEX MATCH "^ref: (.*)\n" GIT_HEAD_REF ${GIT_HEAD})

set(linkedHeadFile "${GIT_DIR}/${CMAKE_MATCH_1}")
set(linkedRef "${CMAKE_MATCH_1}")
if(GIT_HEAD_REF) 
    if(NOT EXISTS "${linkedHeadFile}")
        # the workspace might have a .git/packed-refs file instead of
        # .git/refs/heads/master
        message("-- SIL Kit GIT Version: using ${GIT_DIR}/packed-refs")
        file(READ ${GIT_DIR}/packed-refs packedRefs LIMIT 4096)
        string(REGEX MATCH "([abcdef0-9]+) ${linkedRef}" headHash ${packedRefs})
        if(NOT headHash)
            message(FATAL_ERROR "MakeVersionMacros: cannot find linked git ref \"${linkedRef}\"")
        endif()
        file(WRITE ${gitHashFile} "${CMAKE_MATCH_1}\n")
    else()
        message("-- SIL Kit GIT Version: using ${linkedHeadFile}")
        configure_file(
            "${linkedHeadFile}"
            ${gitHashFile}
            COPYONLY)
    endif()
else()
    configure_file(
        ${gitHeadFile}
        ${gitHashFile}
        COPYONLY)
endif()


file(READ ${gitHashFile} GIT_HEAD_HASH LIMIT 512)
string(STRIP "${GIT_HEAD_HASH}" GIT_HEAD_HASH)
message(STATUS "SIL Kit GIT Version: ${GIT_HEAD_HASH}")
configure_file(
    version_macros.hpp.in
    ${CMAKE_CURRENT_BINARY_DIR}/version_macros.hpp
    @ONLY)
